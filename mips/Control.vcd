$date
  Sat Jun 29 20:59:26 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module control_tb $end
$var reg 1 ! clk $end
$var reg 6 " input[5:0] $end
$var reg 1 # regwrite $end
$var reg 2 $ aluop[1:0] $end
$var reg 1 % alusrc $end
$var reg 1 & memwrite $end
$var reg 1 ' memread $end
$var reg 1 ( regdst $end
$var reg 1 ) memtoreg $end
$var reg 1 * jump $end
$var reg 1 + branch $end
$scope module uut $end
$var reg 1 , clk $end
$var reg 6 - input[5:0] $end
$var reg 2 . aluop[1:0] $end
$var reg 1 / alusrc $end
$var reg 1 0 regdst $end
$var reg 1 1 regwrite $end
$var reg 1 2 memread $end
$var reg 1 3 memwrite $end
$var reg 1 4 memtoreg $end
$var reg 1 5 branch $end
$var reg 1 6 jump $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
bUUUUUU "
0#
b00 $
0%
0&
0'
0(
0)
0*
0+
0,
bUUUUUU -
b00 .
0/
00
01
02
03
04
05
06
#5000000
1!
1,
#10000000
b001000 "
1#
1%
b001000 -
1/
11
#20000000
b101011 "
0#
1&
b101011 -
01
13
#30000000
b000101 "
b01 $
0%
0&
1+
b000101 -
b01 .
0/
03
15
#40000000
